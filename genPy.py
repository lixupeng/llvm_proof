import prover
import prover.ops
def get(module):
  new_type_name = 'struct.Vector_double'
  new_type_struct = ('double*','double*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.Vec2d'
  new_type_struct = ('double','double',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.Vector_Vec2d'
  new_type_struct = ('%struct.Vec2d*','%struct.Vec2d*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.Vector_LineSegment2d'
  new_type_struct = ('%struct.LineSegment2d*','%struct.LineSegment2d*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.LineSegment2d'
  new_type_struct = ('%struct.Vec2d = type { double, double }','%struct.Vec2d = type { double, double }','%struct.Vec2d = type { double, double }','double','double',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.LaneInfo'
  new_type_struct = ('double','%struct.Vector_Vec2d = type { %struct.Vec2d*, %struct.Vec2d*, i32 }','%struct.Vector_Vec2d = type { %struct.Vec2d*, %struct.Vec2d*, i32 }','%struct.Vector_LineSegment2d = type { %struct.LineSegment2d*, %struct.LineSegment2d*, i32 }','%struct.Vector_double = type { double*, double*, i32 }','%struct.LaneBoundary = type { double, %struct.Vector_LaneBoundaryType }','%struct.Vector_int = type { i32*, i32*, i32 }',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.LaneBoundary'
  new_type_struct = ('double','%struct.Vector_LaneBoundaryType = type { %struct.LaneBoundaryType*, %struct.LaneBoundaryType*, i32 }',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.Vector_LaneBoundaryType'
  new_type_struct = ('%struct.LaneBoundaryType*','%struct.LaneBoundaryType*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.LaneBoundaryType'
  new_type_struct = ('double','i32*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.Vector_int'
  new_type_struct = ('i32*','i32*','i32',)
  module.add_type(new_type_name, new_type_struct)

  new_type_name = 'struct.LaneWaypoint'
  new_type_struct = ('%struct.LaneInfo*','double','double',)
  module.add_type(new_type_name, new_type_struct)

  func = prover.Function("min_double")
  module.add_function(func)
  func.add_arg(('double', '%0'))
  func.add_arg(('double', '%1'))
  func.set_entry("bb_2")

  blk = prover.Block("bb_2")
  func.add_block(blk)
  blk.add_equal('%3', prover.ops.lt('i1',('double', '%0'),('double', '%1'),), 'example/path.c:26:12')
  blk.add_equal('%4', prover.ops.select('double',('i1', '%3'),('double', '%0'),('double', '%1'),), 'example/path.c:26:10')
  blk.set_return('%4', 'example/path.c:26:3')


  func = prover.Function("size_double")
  module.add_function(func)
  func.add_arg(('struct.Vector_double*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('double**',('struct.Vector_double*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:30:15')
  blk.add_equal('%3', prover.ops.bitcast('i64*',('double**', '%2'),), 'example/path.c:30:15')
  blk.add_equal('%4', prover.ops.load('i64',('i64*', '%3'),), 'example/path.c:30:15')
  blk.add_equal('%5', prover.ops.bitcast('i64*',('struct.Vector_double*', '%0'),), 'example/path.c:30:26')
  blk.add_equal('%6', prover.ops.load('i64',('i64*', '%5'),), 'example/path.c:30:26')
  blk.add_equal('%7', prover.ops.sub('i64',('i64', '%4'),('i64', '%6'),), 'example/path.c:30:19')
  blk.add_equal('%8', prover.ops.lshr('i64',('i64', '%7'),('i64', prover.ops.constant_int(3,)),), 'example/path.c:30:19')
  blk.add_equal('%9', prover.ops.trunc('i32',('i64', '%8'),), 'example/path.c:30:10')
  blk.set_return('%9', 'example/path.c:30:3')


  func = prover.Function("lower_bound_double")
  module.add_function(func)
  func.add_arg(('double*', '%0'))
  func.add_arg(('double*', '%1'))
  func.add_arg(('double', '%2'))
  func.set_entry("bb_3")

  blk = prover.Block("bb_3")
  func.add_block(blk)
  blk.add_equal('%4', prover.ops.eq('i1',('double*', '%0'),('double*', '%1'),), 'example/path.c:35:21')
  func.add_cond_edge('bb_3', '%4', 'bb_13', 'bb_5', 'example/path.c:35:3')

  blk = prover.Block("bb_5")
  func.add_block(blk)
  func.add_edge('bb_5', 'bb_6', 'example/path.c:36:9')

  blk = prover.Block("bb_6")
  func.add_block(blk)
  blk.add_equal('%7', prover.ops.phi('double*',{'bb_10' : '%11','bb_5' : '%0',},), '')
  blk.add_equal('%8', prover.ops.load('double',('double*', '%7'),), 'example/path.c:36:9')
  blk.add_equal('%9', prover.ops.lt('i1',('double', '%8'),('double', '%2'),), 'example/path.c:36:12')
  func.add_cond_edge('bb_6', '%9', 'bb_10', 'bb_13', 'example/path.c:36:9')

  blk = prover.Block("bb_10")
  func.add_block(blk)
  blk.add_equal('%11', prover.ops.get_element_ptr('double*',('double*', '%7'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:35:29')
  blk.add_equal('%12', prover.ops.eq('i1',('double*', '%11'),('double*', '%1'),), 'example/path.c:35:21')
  func.add_cond_edge('bb_10', '%12', 'bb_13', 'bb_6', 'example/path.c:35:3')

  blk = prover.Block("bb_13")
  func.add_block(blk)
  blk.add_equal('%14', prover.ops.phi('double*',{'bb_3' : '%0','bb_6' : '%7','bb_10' : '%11',},), '')
  blk.set_return('%14', 'example/path.c:38:3')


  func = prover.Function("InnerProd")
  module.add_function(func)
  func.add_arg(('double', '%0'))
  func.add_arg(('double', '%1'))
  func.add_arg(('double', '%2'))
  func.add_arg(('double', '%3'))
  func.set_entry("bb_4")

  blk = prover.Block("bb_4")
  func.add_block(blk)
  blk.add_equal('%5', prover.ops.fmul('double',('double', '%0'),('double', '%2'),), 'example/path.c:50:20')
  blk.add_equal('%6', prover.ops.fmul('double',('double', '%1'),('double', '%3'),), 'example/path.c:50:44')
  blk.add_equal('%7', prover.ops.fadd('double',('double', '%5'),('double', '%6'),), 'example/path.c:50:32')
  blk.set_return('%7', 'example/path.c:50:3')


  func = prover.Function("Sub")
  module.add_function(func)
  func.add_arg(('double', '%0'))
  func.add_arg(('double', '%1'))
  func.add_arg(('double', '%2'))
  func.add_arg(('double', '%3'))
  func.set_entry("bb_4")

  blk = prover.Block("bb_4")
  func.add_block(blk)
  blk.add_equal('%5', prover.ops.fsub('double',('double', '%0'),('double', '%2'),), 'example/path.c:55:25')
  blk.add_equal('%6', prover.ops.fsub('double',('double', '%1'),('double', '%3'),), 'example/path.c:56:25')
  blk.add_equal('%7', prover.ops.insert_value(('{ double, double }', prover.ops.undef('{ double, double }',)),0,('double', '%5'),), 'example/path.c:58:1')
  blk.add_equal('%8', prover.ops.insert_value(('{ double, double }', '%7'),1,('double', '%6'),), 'example/path.c:58:1')
  blk.set_return('%8', 'example/path.c:58:1')


  func = prover.Function("Mul")
  module.add_function(func)
  func.add_arg(('double', '%0'))
  func.add_arg(('double', '%1'))
  func.add_arg(('double', '%2'))
  func.set_entry("bb_3")

  blk = prover.Block("bb_3")
  func.add_block(blk)
  blk.add_equal('%4', prover.ops.fmul('double',('double', '%0'),('double', '%2'),), 'example/path.c:62:25')
  blk.add_equal('%5', prover.ops.fmul('double',('double', '%1'),('double', '%2'),), 'example/path.c:63:25')
  blk.add_equal('%6', prover.ops.insert_value(('{ double, double }', prover.ops.undef('{ double, double }',)),0,('double', '%4'),), 'example/path.c:65:1')
  blk.add_equal('%7', prover.ops.insert_value(('{ double, double }', '%6'),1,('double', '%5'),), 'example/path.c:65:1')
  blk.set_return('%7', 'example/path.c:65:1')


  func = prover.Function("empty_Vec2d")
  module.add_function(func)
  func.add_arg(('struct.Vector_Vec2d*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('struct.Vec2d**',('struct.Vector_Vec2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:74:15')
  blk.add_equal('%3', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%2'),), 'example/path.c:74:15')
  blk.add_equal('%4', prover.ops.get_element_ptr('struct.Vec2d**',('struct.Vector_Vec2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:74:27')
  blk.add_equal('%5', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%4'),), 'example/path.c:74:27')
  blk.add_equal('%6', prover.ops.eq('i1',('struct.Vec2d*', '%3'),('struct.Vec2d*', '%5'),), 'example/path.c:74:19')
  blk.add_equal('%7', prover.ops.zext('i32',('i1', '%6'),), 'example/path.c:74:19')
  blk.set_return('%7', 'example/path.c:74:3')


  func = prover.Function("size_Vec2d")
  module.add_function(func)
  func.add_arg(('struct.Vector_Vec2d*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('struct.Vec2d**',('struct.Vector_Vec2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:78:15')
  blk.add_equal('%3', prover.ops.bitcast('i64*',('struct.Vec2d**', '%2'),), 'example/path.c:78:15')
  blk.add_equal('%4', prover.ops.load('i64',('i64*', '%3'),), 'example/path.c:78:15')
  blk.add_equal('%5', prover.ops.bitcast('i64*',('struct.Vector_Vec2d*', '%0'),), 'example/path.c:78:26')
  blk.add_equal('%6', prover.ops.load('i64',('i64*', '%5'),), 'example/path.c:78:26')
  blk.add_equal('%7', prover.ops.sub('i64',('i64', '%4'),('i64', '%6'),), 'example/path.c:78:19')
  blk.add_equal('%8', prover.ops.lshr('i64',('i64', '%7'),('i64', prover.ops.constant_int(4,)),), 'example/path.c:78:19')
  blk.add_equal('%9', prover.ops.trunc('i32',('i64', '%8'),), 'example/path.c:78:10')
  blk.set_return('%9', 'example/path.c:78:3')


  func = prover.Function("empty_LineSegment2d")
  module.add_function(func)
  func.add_arg(('struct.Vector_LineSegment2d*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('struct.LineSegment2d**',('struct.Vector_LineSegment2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:99:15')
  blk.add_equal('%3', prover.ops.load('struct.LineSegment2d*',('struct.LineSegment2d**', '%2'),), 'example/path.c:99:15')
  blk.add_equal('%4', prover.ops.get_element_ptr('struct.LineSegment2d**',('struct.Vector_LineSegment2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:99:27')
  blk.add_equal('%5', prover.ops.load('struct.LineSegment2d*',('struct.LineSegment2d**', '%4'),), 'example/path.c:99:27')
  blk.add_equal('%6', prover.ops.eq('i1',('struct.LineSegment2d*', '%3'),('struct.LineSegment2d*', '%5'),), 'example/path.c:99:19')
  blk.add_equal('%7', prover.ops.zext('i32',('i1', '%6'),), 'example/path.c:99:19')
  blk.set_return('%7', 'example/path.c:99:3')


  func = prover.Function("size_LineSegment2d")
  module.add_function(func)
  func.add_arg(('struct.Vector_LineSegment2d*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('struct.LineSegment2d**',('struct.Vector_LineSegment2d*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:103:15')
  blk.add_equal('%3', prover.ops.bitcast('i64*',('struct.LineSegment2d**', '%2'),), 'example/path.c:103:15')
  blk.add_equal('%4', prover.ops.load('i64',('i64*', '%3'),), 'example/path.c:103:15')
  blk.add_equal('%5', prover.ops.bitcast('i64*',('struct.Vector_LineSegment2d*', '%0'),), 'example/path.c:103:26')
  blk.add_equal('%6', prover.ops.load('i64',('i64*', '%5'),), 'example/path.c:103:26')
  blk.add_equal('%7', prover.ops.sub('i64',('i64', '%4'),('i64', '%6'),), 'example/path.c:103:19')
  blk.add_equal('%8', prover.ops.lshr('i64',('i64', '%7'),('i64', prover.ops.constant_int(6,)),), 'example/path.c:103:19')
  blk.add_equal('%9', prover.ops.trunc('i32',('i64', '%8'),), 'example/path.c:103:10')
  blk.set_return('%9', 'example/path.c:103:3')


  func = prover.Function("GetProjection")
  module.add_function(func)
  func.add_arg(('struct.LaneInfo*', '%0'))
  func.add_arg(('struct.Vec2d*', '%1'))
  func.add_arg(('double*', '%2'))
  func.add_arg(('double*', '%3'))
  func.set_entry("bb_4")

  blk = prover.Block("bb_4")
  func.add_block(blk)
  blk.add_equal('%5', prover.ops.eq('i1',('double*', '%2'),('double*', prover.ops.constant_pointer_null('double*',)),), 'example/path.c:156:8')
  blk.add_equal('%6', prover.ops.eq('i1',('double*', '%3'),('double*', prover.ops.constant_pointer_null('double*',)),), 'example/path.c:157:8')
  blk.add_equal('%7', prover.ops.or_('i1',('i1', '%5'),('i1', '%6'),), 'example/path.c:156:7')
  blk.add_equal('%8', prover.ops.eq('i1',('struct.Vec2d*', '%1'),('struct.Vec2d*', prover.ops.constant_pointer_null('struct.Vec2d*',)),), 'example/path.c:158:8')
  blk.add_equal('%9', prover.ops.or_('i1',('i1', '%8'),('i1', '%7'),), 'example/path.c:156:7')
  blk.add_equal('%10', prover.ops.eq('i1',('struct.LaneInfo*', '%0'),('struct.LaneInfo*', prover.ops.constant_pointer_null('struct.LaneInfo*',)),), 'example/path.c:159:8')
  blk.add_equal('%11', prover.ops.or_('i1',('i1', '%10'),('i1', '%9'),), 'example/path.c:156:7')
  func.add_cond_edge('bb_4', '%11', 'bb_112', 'bb_12', 'example/path.c:156:7')

  blk = prover.Block("bb_12")
  func.add_block(blk)
  blk.add_equal('%13', prover.ops.get_element_ptr('struct.Vector_LineSegment2d*',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(3,)),), 'example/path.c:159:43')
  blk.add_equal('%14', prover.ops.call('i32',('struct.Vector_LineSegment2d*', '%13'),('i32 (%struct.Vector_LineSegment2d*)*', prover.ops.global_value('i32 (%struct.Vector_LineSegment2d*)*','@empty_LineSegment2d',)),), 'example/path.c:159:16')
  blk.add_equal('%15', prover.ops.eq('i1',('i32', '%14'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:159:16')
  func.add_cond_edge('bb_12', '%15', 'bb_16', 'bb_112', 'example/path.c:159:7')

  blk = prover.Block("bb_16")
  func.add_block(blk)
  blk.add_equal('%17', prover.ops.call('i32',('struct.Vector_LineSegment2d*', '%13'),('i32 (%struct.Vector_LineSegment2d*)*', prover.ops.global_value('i32 (%struct.Vector_LineSegment2d*)*','@size_LineSegment2d',)),), 'example/path.c:164:27')
  blk.add_equal('%18', prover.ops.eq('i1',('i32', '%17'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:166:26')
  blk.add_equal('%19', prover.ops.get_element_ptr('struct.LineSegment2d**',('struct.Vector_LineSegment2d*', '%13'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), '')
  blk.add_equal('%20', prover.ops.load('struct.LineSegment2d*',('struct.LineSegment2d**', '%19'),), '')
  func.add_cond_edge('bb_16', '%18', 'bb_26', 'bb_21', 'example/path.c:166:3')

  blk = prover.Block("bb_21")
  func.add_block(blk)
  blk.add_equal('%22', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%1'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), '')
  blk.add_equal('%23', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%1'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), '')
  blk.add_equal('%24', prover.ops.zext('i64',('i32', '%17'),), 'example/path.c:166:3')
  blk.add_equal('%25', prover.ops.zext('i64',('i32', '%17'),), '')
  func.add_edge('bb_21', 'bb_39', 'example/path.c:166:3')

  blk = prover.Block("bb_26")
  func.add_block(blk)
  blk.add_equal('%27', prover.ops.phi('double',{'bb_16' : prover.ops.constant_double('double 0.000000e+00',),'bb_82' : '%83',},), '')
  blk.add_equal('%28', prover.ops.phi('i32',{'bb_16' : prover.ops.constant_int(0,),'bb_82' : '%84',},), '')
  blk.add_equal('%29', prover.ops.phi('double',{'bb_16' : prover.ops.constant_double('double 0x47D2CED32A16A1B1',),'bb_82' : '%85',},), '')
  blk.add_equal('%30', prover.ops.phi('struct.LineSegment2d*',{'bb_16' : '%20','bb_82' : '%87',},), '')
  blk.add_equal('%31', prover.ops.zext('i64',('i32', '%28'),), 'example/path.c:186:63')
  blk.add_equal('%32', prover.ops.get_element_ptr('struct.LineSegment2d*',('struct.LineSegment2d*', '%30'),('i64', '%31'),), 'example/path.c:186:63')
  blk.add_equal('%33', prover.ops.add('i32',('i32', '%28'),('i32', prover.ops.constant_int(1,)),), 'example/path.c:187:17')
  blk.add_equal('%34', prover.ops.ult('i1',('i32', '%33'),('i32', '%17'),), 'example/path.c:187:21')
  blk.add_equal('%35', prover.ops.get_element_ptr('double**',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(4,)),('i32', prover.ops.constant_int(0,)),), '')
  blk.add_equal('%36', prover.ops.load('double*',('double**', '%35'),), '')
  blk.add_equal('%37', prover.ops.get_element_ptr('double*',('double*', '%36'),('i64', '%31'),), '')
  blk.add_equal('%38', prover.ops.load('double',('double*', '%37'),), '')
  func.add_cond_edge('bb_26', '%34', 'bb_89', 'bb_93', 'example/path.c:187:7')

  blk = prover.Block("bb_39")
  func.add_block(blk)
  blk.add_equal('%40', prover.ops.phi('i64',{'bb_21' : prover.ops.constant_int(0,),'bb_82' : '%86',},), '')
  blk.add_equal('%41', prover.ops.phi('struct.LineSegment2d*',{'bb_21' : '%20','bb_82' : '%87',},), '')
  blk.add_equal('%42', prover.ops.phi('double',{'bb_21' : prover.ops.constant_double('double 0x47D2CED32A16A1B1',),'bb_82' : '%85',},), '')
  blk.add_equal('%43', prover.ops.phi('i32',{'bb_21' : prover.ops.constant_int(0,),'bb_82' : '%84',},), '')
  blk.add_equal('%44', prover.ops.phi('double',{'bb_21' : prover.ops.constant_double('double 0.000000e+00',),'bb_82' : '%83',},), '')
  blk.add_equal('%45', prover.ops.get_element_ptr('struct.LineSegment2d*',('struct.LineSegment2d*', '%41'),('i64', '%40'),), 'example/path.c:167:65')
  blk.add_equal('%46', prover.ops.call('double',('struct.LineSegment2d*', '%45'),('struct.Vec2d*', '%1'),('double (%struct.LineSegment2d*, %struct.Vec2d*)*', prover.ops.global_value('double (%struct.LineSegment2d*, %struct.Vec2d*)*','@DistanceTo',)),), 'example/path.c:168:29')
  blk.add_equal('%47', prover.ops.lt('i1',('double', '%46'),('double', '%42'),), 'example/path.c:169:18')
  func.add_cond_edge('bb_39', '%47', 'bb_48', 'bb_82', 'example/path.c:169:9')

  blk = prover.Block("bb_48")
  func.add_block(blk)
  blk.add_equal('%49', prover.ops.call('double',('struct.LineSegment2d*', '%45'),('struct.Vec2d*', '%1'),('double (%struct.LineSegment2d*, %struct.Vec2d*)*', prover.ops.global_value('double (%struct.LineSegment2d*, %struct.Vec2d*)*','@ProjectOntoUnit',)),), 'example/path.c:170:27')
  blk.add_equal('%50', prover.ops.lt('i1',('double', '%49'),('double', prover.ops.constant_double('double 0.000000e+00',)),), 'example/path.c:171:16')
  blk.add_equal('%51', prover.ops.ne('i1',('i64', '%40'),('i64', prover.ops.constant_int(0,)),), 'example/path.c:171:27')
  blk.add_equal('%52', prover.ops.and_('i1',('i1', '%51'),('i1', '%50'),), 'example/path.c:171:22')
  func.add_cond_edge('bb_48', '%52', 'bb_82', 'bb_53', 'example/path.c:171:22')

  blk = prover.Block("bb_53")
  func.add_block(blk)
  blk.add_equal('%54', prover.ops.get_element_ptr('double*',('struct.LineSegment2d*', '%41'),('i64', '%40'),('i32', prover.ops.constant_int(4,)),), 'example/path.c:174:27')
  blk.add_equal('%55', prover.ops.load('double',('double*', '%54'),), 'example/path.c:174:27')
  blk.add_equal('%56', prover.ops.gt('i1',('double', '%49'),('double', '%55'),), 'example/path.c:174:16')
  blk.add_equal('%57', prover.ops.add('i64',('i64', '%40'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:174:40')
  blk.add_equal('%58', prover.ops.ult('i1',('i64', '%57'),('i64', '%24'),), 'example/path.c:174:44')
  blk.add_equal('%59', prover.ops.and_('i1',('i1', '%58'),('i1', '%56'),), 'example/path.c:174:35')
  func.add_cond_edge('bb_53', '%59', 'bb_60', 'bb_80', 'example/path.c:174:35')

  blk = prover.Block("bb_60")
  func.add_block(blk)
  blk.add_equal('%61', prover.ops.load('struct.LineSegment2d*',('struct.LineSegment2d**', '%19'),), 'example/path.c:175:68')
  blk.add_equal('%62', prover.ops.get_element_ptr('struct.LineSegment2d*',('struct.LineSegment2d*', '%61'),('i64', '%40'),), 'example/path.c:175:74')
  blk.add_equal('%63', prover.ops.get_element_ptr('struct.LineSegment2d*',('struct.LineSegment2d*', '%62'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:175:78')
  blk.add_equal('%64', prover.ops.load('double',('double*', '%22'),), 'example/path.c:176:23')
  blk.add_equal('%65', prover.ops.load('double',('double*', '%23'),), 'example/path.c:176:23')
  blk.add_equal('%66', prover.ops.get_element_ptr('double*',('struct.LineSegment2d*', '%63'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:176:23')
  blk.add_equal('%67', prover.ops.load('double',('double*', '%66'),), 'example/path.c:176:23')
  blk.add_equal('%68', prover.ops.get_element_ptr('double*',('struct.LineSegment2d*', '%63'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:176:23')
  blk.add_equal('%69', prover.ops.load('double',('double*', '%68'),), 'example/path.c:176:23')
  blk.add_equal('%70', prover.ops.call('{ double, double }',('double', '%64'),('double', '%65'),('double', '%67'),('double', '%69'),('{ double, double } (double, double, double, double)*', prover.ops.global_value('{ double, double } (double, double, double, double)*','@Sub',)),), 'example/path.c:176:23')
  blk.add_equal('%71', prover.ops.extract_value(('{ double, double }', '%70'),0,), 'example/path.c:176:23')
  blk.add_equal('%72', prover.ops.extract_value(('{ double, double }', '%70'),1,), 'example/path.c:176:23')
  blk.add_equal('%73', prover.ops.get_element_ptr('struct.Vec2d*',('struct.LineSegment2d*', '%63'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(2,)),), 'example/path.c:176:72')
  blk.add_equal('%74', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%73'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:176:13')
  blk.add_equal('%75', prover.ops.load('double',('double*', '%74'),), 'example/path.c:176:13')
  blk.add_equal('%76', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%73'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:176:13')
  blk.add_equal('%77', prover.ops.load('double',('double*', '%76'),), 'example/path.c:176:13')
  blk.add_equal('%78', prover.ops.call('double',('double', '%71'),('double', '%72'),('double', '%75'),('double', '%77'),('double (double, double, double, double)*', prover.ops.global_value('double (double, double, double, double)*','@InnerProd',)),), 'example/path.c:176:13')
  blk.add_equal('%79', prover.ops.lt('i1',('double', '%78'),('double', prover.ops.constant_double('double 0.000000e+00',)),), 'example/path.c:176:89')
  func.add_cond_edge('bb_60', '%79', 'bb_80', 'bb_82', '')

  blk = prover.Block("bb_80")
  func.add_block(blk)
  blk.add_equal('%81', prover.ops.trunc('i32',('i64', '%40'),), 'example/path.c:183:5')
  func.add_edge('bb_80', 'bb_82', 'example/path.c:183:5')

  blk = prover.Block("bb_82")
  func.add_block(blk)
  blk.add_equal('%83', prover.ops.phi('double',{'bb_39' : '%44','bb_80' : '%49','bb_60' : '%44','bb_48' : '%44',},), '')
  blk.add_equal('%84', prover.ops.phi('i32',{'bb_39' : '%43','bb_80' : '%81','bb_60' : '%43','bb_48' : '%43',},), '')
  blk.add_equal('%85', prover.ops.phi('double',{'bb_39' : '%42','bb_80' : '%46','bb_60' : '%42','bb_48' : '%42',},), '')
  blk.add_equal('%86', prover.ops.add('i64',('i64', '%40'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:166:42')
  blk.add_equal('%87', prover.ops.load('struct.LineSegment2d*',('struct.LineSegment2d**', '%19'),), '')
  blk.add_equal('%88', prover.ops.eq('i1',('i64', '%86'),('i64', '%25'),), 'example/path.c:166:26')
  func.add_cond_edge('bb_82', '%88', 'bb_26', 'bb_39', 'example/path.c:166:3')

  blk = prover.Block("bb_89")
  func.add_block(blk)
  blk.add_equal('%90', prover.ops.get_element_ptr('double*',('struct.LineSegment2d*', '%30'),('i64', '%31'),('i32', prover.ops.constant_int(4,)),), 'example/path.c:191:83')
  blk.add_equal('%91', prover.ops.load('double',('double*', '%90'),), 'example/path.c:191:83')
  blk.add_equal('%92', prover.ops.call('double',('double', '%27'),('double', '%91'),('double (double, double)*', prover.ops.global_value('double (double, double)*','@min_double',)),), 'example/path.c:191:53')
  func.add_edge('bb_89', 'bb_93', '')

  blk = prover.Block("bb_93")
  func.add_block(blk)
  blk.add_equal('%94', prover.ops.phi('double',{'bb_89' : '%92','bb_26' : '%27',},), '')
  blk.add_equal('%95', prover.ops.fadd('double',('double', '%38'),('double', '%94'),), '')
  blk.add_event(prover.ops.store('void',('double', '%95'),('double*', '%2'),), '')
  blk.add_equal('%96', prover.ops.call('double',('struct.LineSegment2d*', '%32'),('struct.Vec2d*', '%1'),('double (%struct.LineSegment2d*, %struct.Vec2d*)*', prover.ops.global_value('double (%struct.LineSegment2d*, %struct.Vec2d*)*','@ProductOntoUnit',)),), 'example/path.c:193:23')
  blk.add_equal('%97', prover.ops.eq('i1',('i32', '%28'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:194:18')
  blk.add_equal('%98', prover.ops.lt('i1',('double', '%27'),('double', prover.ops.constant_double('double 0.000000e+00',)),), 'example/path.c:194:35')
  blk.add_equal('%99', prover.ops.and_('i1',('i1', '%98'),('i1', '%97'),), 'example/path.c:194:23')
  func.add_cond_edge('bb_93', '%99', 'bb_110', 'bb_100', 'example/path.c:194:23')

  blk = prover.Block("bb_100")
  func.add_block(blk)
  blk.add_equal('%101', prover.ops.eq('i1',('i32', '%33'),('i32', '%17'),), 'example/path.c:195:22')
  func.add_cond_edge('bb_100', '%101', 'bb_102', 'bb_106', 'example/path.c:195:38')

  blk = prover.Block("bb_102")
  func.add_block(blk)
  blk.add_equal('%103', prover.ops.get_element_ptr('double*',('struct.LineSegment2d*', '%30'),('i64', '%31'),('i32', prover.ops.constant_int(4,)),), 'example/path.c:195:61')
  blk.add_equal('%104', prover.ops.load('double',('double*', '%103'),), 'example/path.c:195:61')
  blk.add_equal('%105', prover.ops.gt('i1',('double', '%27'),('double', '%104'),), 'example/path.c:195:50')
  func.add_cond_edge('bb_102', '%105', 'bb_110', 'bb_106', 'example/path.c:194:7')

  blk = prover.Block("bb_106")
  func.add_block(blk)
  blk.add_equal('%107', prover.ops.gt('i1',('double', '%96'),('double', prover.ops.constant_double('double 0.000000e+00',)),), 'example/path.c:198:22')
  blk.add_equal('%108', prover.ops.fsub('double',('double', prover.ops.constant_double('double -0.000000e+00',)),('double', '%29'),), 'example/path.c:198:45')
  blk.add_equal('%109', prover.ops.select('double',('i1', '%107'),('double', '%29'),('double', '%108'),), 'example/path.c:198:17')
  func.add_edge('bb_106', 'bb_110', '')

  blk = prover.Block("bb_110")
  func.add_block(blk)
  blk.add_equal('%111', prover.ops.phi('double',{'bb_106' : '%109','bb_93' : '%96','bb_102' : '%96',},), '')
  blk.add_event(prover.ops.store('void',('double', '%111'),('double*', '%3'),), '')
  func.add_edge('bb_110', 'bb_112', '')

  blk = prover.Block("bb_112")
  func.add_block(blk)
  blk.add_equal('%113', prover.ops.phi('i32',{'bb_110' : prover.ops.constant_int(1,),'bb_4' : prover.ops.constant_int(0,),'bb_12' : prover.ops.constant_int(0,),},), '')
  blk.set_return('%113', 'example/path.c:202:1')


  func = prover.Function("GetSmoothPoint")
  module.add_function(func)
  func.add_arg(('struct.LaneInfo*', '%0'))
  func.add_arg(('double', '%1'))
  func.set_entry("bb_2")

  blk = prover.Block("bb_2")
  func.add_block(blk)
  blk.add_equal('%3', prover.ops.get_element_ptr('struct.Vector_Vec2d*',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:207:25')
  blk.add_equal('%4', prover.ops.call('i32',('struct.Vector_Vec2d*', '%3'),('i32 (%struct.Vector_Vec2d*)*', prover.ops.global_value('i32 (%struct.Vector_Vec2d*)*','@size_Vec2d',)),), 'example/path.c:207:7')
  blk.add_equal('%5', prover.ops.ult('i1',('i32', '%4'),('i32', prover.ops.constant_int(2,)),), 'example/path.c:207:34')
  func.add_cond_edge('bb_2', '%5', 'bb_73', 'bb_6', 'example/path.c:207:7')

  blk = prover.Block("bb_6")
  func.add_block(blk)
  blk.add_equal('%7', prover.ops.gt('i1',('double', '%1'),('double', prover.ops.constant_double('double 0.000000e+00',)),), 'example/path.c:210:9')
  func.add_cond_edge('bb_6', '%7', 'bb_15', 'bb_8', 'example/path.c:210:7')

  blk = prover.Block("bb_8")
  func.add_block(blk)
  blk.add_equal('%9', prover.ops.get_element_ptr('struct.Vec2d**',('struct.Vector_Vec2d*', '%3'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:211:27')
  blk.add_equal('%10', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%9'),), 'example/path.c:211:27')
  blk.add_equal('%11', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%10'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:211:12')
  blk.add_equal('%12', prover.ops.load('double',('double*', '%11'),), 'example/path.c:211:12')
  blk.add_equal('%13', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%10'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:211:12')
  blk.add_equal('%14', prover.ops.load('double',('double*', '%13'),), 'example/path.c:211:12')
  func.add_edge('bb_8', 'bb_73', 'example/path.c:211:5')

  blk = prover.Block("bb_15")
  func.add_block(blk)
  blk.add_equal('%16', prover.ops.get_element_ptr('double*',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:214:18')
  blk.add_equal('%17', prover.ops.load('double',('double*', '%16'),), 'example/path.c:214:18')
  blk.add_equal('%18', prover.ops.gt('i1',('double', '%17'),('double', '%1'),), 'example/path.c:214:9')
  func.add_cond_edge('bb_15', '%18', 'bb_26', 'bb_19', 'example/path.c:214:7')

  blk = prover.Block("bb_19")
  func.add_block(blk)
  blk.add_equal('%20', prover.ops.get_element_ptr('struct.Vec2d**',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:215:28')
  blk.add_equal('%21', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%20'),), 'example/path.c:215:28')
  blk.add_equal('%22', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%21'),('i64', prover.ops.constant_int(18446744073709551615,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:215:12')
  blk.add_equal('%23', prover.ops.load('double',('double*', '%22'),), 'example/path.c:215:12')
  blk.add_equal('%24', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%21'),('i64', prover.ops.constant_int(18446744073709551615,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:215:12')
  blk.add_equal('%25', prover.ops.load('double',('double*', '%24'),), 'example/path.c:215:12')
  func.add_edge('bb_19', 'bb_73', 'example/path.c:215:5')

  blk = prover.Block("bb_26")
  func.add_block(blk)
  blk.add_equal('%27', prover.ops.get_element_ptr('struct.Vector_double*',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(4,)),), 'example/path.c:217:56')
  blk.add_equal('%28', prover.ops.call('i32',('struct.Vector_double*', '%27'),('i32 (%struct.Vector_double*)*', prover.ops.global_value('i32 (%struct.Vector_double*)*','@size_double',)),), 'example/path.c:217:37')
  blk.add_equal('%29', prover.ops.eq('i1',('i32', '%4'),('i32', '%28'),), 'example/path.c:217:34')
  func.add_cond_edge('bb_26', '%29', 'bb_30', 'bb_73', 'example/path.c:217:7')

  blk = prover.Block("bb_30")
  func.add_block(blk)
  blk.add_equal('%31', prover.ops.get_element_ptr('double**',('struct.Vector_double*', '%27'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:221:67')
  blk.add_equal('%32', prover.ops.load('double*',('double**', '%31'),), 'example/path.c:221:67')
  blk.add_equal('%33', prover.ops.get_element_ptr('double**',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(4,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:221:95')
  blk.add_equal('%34', prover.ops.load('double*',('double**', '%33'),), 'example/path.c:221:95')
  blk.add_equal('%35', prover.ops.call('double*',('double*', '%32'),('double*', '%34'),('double', '%1'),('double* (double*, double*, double)*', prover.ops.global_value('double* (double*, double*, double)*','@lower_bound_double',)),), 'example/path.c:221:27')
  blk.add_equal('%36', prover.ops.eq('i1',('double*', '%35'),('double*', '%34'),), 'example/path.c:222:15')
  func.add_cond_edge('bb_30', '%36', 'bb_73', 'bb_37', 'example/path.c:222:7')

  blk = prover.Block("bb_37")
  func.add_block(blk)
  blk.add_equal('%38', prover.ops.bitcast('i64*',('struct.Vector_double*', '%27'),), 'example/path.c:225:51')
  blk.add_equal('%39', prover.ops.load('i64',('i64*', '%38'),), 'example/path.c:225:51')
  blk.add_equal('%40', prover.ops.ptr_to_int('i64',('double*', '%35'),), 'example/path.c:225:28')
  blk.add_equal('%41', prover.ops.sub('i64',('i64', '%40'),('i64', '%39'),), 'example/path.c:225:28')
  blk.add_equal('%42', prover.ops.lshr('i64',('i64', '%41'),('i64', prover.ops.constant_int(3,)),), 'example/path.c:225:28')
  blk.add_equal('%43', prover.ops.load('double',('double*', '%35'),), 'example/path.c:226:20')
  blk.add_equal('%44', prover.ops.fsub('double',('double', '%43'),('double', '%1'),), 'example/path.c:226:29')
  blk.add_equal('%45', prover.ops.lt('i1',('double', '%44'),('double', prover.ops.constant_double('double 1.000000e-08',)),), 'example/path.c:227:15')
  blk.add_equal('%46', prover.ops.get_element_ptr('struct.Vec2d**',('struct.Vector_Vec2d*', '%3'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), '')
  blk.add_equal('%47', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%46'),), '')
  blk.add_equal('%48', prover.ops.and_('i64',('i64', '%42'),('i64', prover.ops.constant_int(4294967295,)),), '')
  func.add_cond_edge('bb_37', '%45', 'bb_49', 'bb_54', 'example/path.c:227:7')

  blk = prover.Block("bb_49")
  func.add_block(blk)
  blk.add_equal('%50', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%47'),('i64', '%48'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:228:12')
  blk.add_equal('%51', prover.ops.load('double',('double*', '%50'),), 'example/path.c:228:12')
  blk.add_equal('%52', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%47'),('i64', '%48'),('i32', prover.ops.constant_int(1,)),), 'example/path.c:228:12')
  blk.add_equal('%53', prover.ops.load('double',('double*', '%52'),), 'example/path.c:228:12')
  func.add_edge('bb_49', 'bb_73', 'example/path.c:228:5')

  blk = prover.Block("bb_54")
  func.add_block(blk)
  blk.add_equal('%55', prover.ops.get_element_ptr('struct.Vec2d**',('struct.LaneInfo*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(2,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:231:97')
  blk.add_equal('%56', prover.ops.load('struct.Vec2d*',('struct.Vec2d**', '%55'),), 'example/path.c:231:97')
  blk.add_equal('%57', prover.ops.get_element_ptr('struct.Vec2d*',('struct.Vec2d*', '%56'),('i64', '%48'),), 'example/path.c:231:103')
  blk.add_equal('%58', prover.ops.get_element_ptr('struct.Vec2d*',('struct.Vec2d*', '%57'),('i64', prover.ops.constant_int(18446744073709551615,)),), 'example/path.c:231:111')
  blk.add_equal('%59', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%58'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:231:68')
  blk.add_equal('%60', prover.ops.load('double',('double*', '%59'),), 'example/path.c:231:68')
  blk.add_equal('%61', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%58'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:231:68')
  blk.add_equal('%62', prover.ops.load('double',('double*', '%61'),), 'example/path.c:231:68')
  blk.add_equal('%63', prover.ops.call('{ double, double }',('double', '%60'),('double', '%62'),('double', '%44'),('{ double, double } (double, double, double)*', prover.ops.global_value('{ double, double } (double, double, double)*','@Mul',)),), 'example/path.c:231:68')
  blk.add_equal('%64', prover.ops.extract_value(('{ double, double }', '%63'),0,), 'example/path.c:231:68')
  blk.add_equal('%65', prover.ops.extract_value(('{ double, double }', '%63'),1,), 'example/path.c:231:68')
  blk.add_equal('%66', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%47'),('i64', '%48'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:231:31')
  blk.add_equal('%67', prover.ops.load('double',('double*', '%66'),), 'example/path.c:231:31')
  blk.add_equal('%68', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%47'),('i64', '%48'),('i32', prover.ops.constant_int(1,)),), 'example/path.c:231:31')
  blk.add_equal('%69', prover.ops.load('double',('double*', '%68'),), 'example/path.c:231:31')
  blk.add_equal('%70', prover.ops.call('{ double, double }',('double', '%67'),('double', '%69'),('double', '%64'),('double', '%65'),('{ double, double } (double, double, double, double)*', prover.ops.global_value('{ double, double } (double, double, double, double)*','@Sub',)),), 'example/path.c:231:31')
  blk.add_equal('%71', prover.ops.extract_value(('{ double, double }', '%70'),0,), 'example/path.c:231:31')
  blk.add_equal('%72', prover.ops.extract_value(('{ double, double }', '%70'),1,), 'example/path.c:231:31')
  func.add_edge('bb_54', 'bb_73', '')

  blk = prover.Block("bb_73")
  func.add_block(blk)
  blk.add_equal('%74', prover.ops.phi('double',{'bb_8' : '%12','bb_19' : '%23','bb_2' : prover.ops.constant_double('double 0.000000e+00',),'bb_26' : prover.ops.constant_double('double 0.000000e+00',),'bb_30' : prover.ops.constant_double('double 0.000000e+00',),'bb_49' : '%51','bb_54' : '%71',},), '')
  blk.add_equal('%75', prover.ops.phi('double',{'bb_8' : '%14','bb_19' : '%25','bb_2' : prover.ops.constant_double('double 0.000000e+00',),'bb_26' : prover.ops.constant_double('double 0.000000e+00',),'bb_30' : prover.ops.constant_double('double 0.000000e+00',),'bb_49' : '%53','bb_54' : '%72',},), '')
  blk.add_equal('%76', prover.ops.insert_value(('{ double, double }', prover.ops.undef('{ double, double }',)),0,('double', '%74'),), 'example/path.c:234:1')
  blk.add_equal('%77', prover.ops.insert_value(('{ double, double }', '%76'),1,('double', '%75'),), 'example/path.c:234:1')
  blk.set_return('%77', 'example/path.c:234:1')


  func = prover.Function("LaneWaypoint1")
  module.add_function(func)
  func.set_entry("bb_0")

  blk = prover.Block("bb_0")
  func.add_block(blk)
  blk.add_equal('%1', prover.ops.call('i8*',('i64', prover.ops.constant_int(24,)),('i8* (i64)*', prover.ops.global_value('i8* (i64)*','@malloc',)),), 'example/path.c:246:56')
  blk.add_equal('%2', prover.ops.bitcast('struct.LaneWaypoint*',('i8*', '%1'),), 'example/path.c:246:34')
  blk.add_event(prover.ops.call('void',('i8*', '%1'),('i8', prover.ops.constant_int(0,)),('i64', prover.ops.constant_int(24,)),('i32', prover.ops.constant_int(8,)),('i1', prover.ops.constant_int(0,)),('void (i8*, i8, i64, i32, i1)*', prover.ops.global_value('void (i8*, i8, i64, i32, i1)*','@llvm_memset_p0i8_i64',)),), 'example/path.c:248:14')
  blk.set_return('%2', 'example/path.c:250:3')


  func = prover.Function("LaneWaypoint2")
  module.add_function(func)
  func.add_arg(('struct.LaneInfo*', '%0'))
  func.add_arg(('double', '%1'))
  func.set_entry("bb_2")

  blk = prover.Block("bb_2")
  func.add_block(blk)
  blk.add_equal('%3', prover.ops.call('i8*',('i64', prover.ops.constant_int(24,)),('i8* (i64)*', prover.ops.global_value('i8* (i64)*','@malloc',)),), 'example/path.c:254:56')
  blk.add_equal('%4', prover.ops.bitcast('struct.LaneWaypoint*',('i8*', '%3'),), 'example/path.c:254:34')
  blk.add_equal('%5', prover.ops.bitcast('struct.LaneInfo**',('i8*', '%3'),), 'example/path.c:255:12')
  blk.add_event(prover.ops.store('void',('struct.LaneInfo*', '%0'),('struct.LaneInfo**', '%5'),), 'example/path.c:255:18')
  blk.add_equal('%6', prover.ops.get_element_ptr('i8*',('i8*', '%3'),('i64', prover.ops.constant_int(8,)),), 'example/path.c:256:12')
  blk.add_equal('%7', prover.ops.bitcast('double*',('i8*', '%6'),), 'example/path.c:256:12')
  blk.add_event(prover.ops.store('void',('double', '%1'),('double*', '%7'),), 'example/path.c:256:14')
  blk.add_equal('%8', prover.ops.get_element_ptr('i8*',('i8*', '%3'),('i64', prover.ops.constant_int(16,)),), 'example/path.c:257:12')
  blk.add_equal('%9', prover.ops.bitcast('double*',('i8*', '%8'),), 'example/path.c:257:12')
  blk.add_event(prover.ops.store('void',('double', prover.ops.constant_double('double 0.000000e+00',)),('double*', '%9'),), 'example/path.c:257:14')
  blk.set_return('%4', 'example/path.c:258:3')


  func = prover.Function("RightBoundaryType")
  module.add_function(func)
  func.add_arg(('struct.LaneWaypoint*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.get_element_ptr('struct.LaneInfo**',('struct.LaneWaypoint*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:262:18')
  blk.add_equal('%3', prover.ops.load('struct.LaneInfo*',('struct.LaneInfo**', '%2'),), 'example/path.c:262:18')
  blk.add_equal('%4', prover.ops.eq('i1',('struct.LaneInfo*', '%3'),('struct.LaneInfo*', prover.ops.constant_pointer_null('struct.LaneInfo*',)),), 'example/path.c:262:8')
  func.add_cond_edge('bb_1', '%4', 'bb_33', 'bb_5', 'example/path.c:262:7')

  blk = prover.Block("bb_5")
  func.add_block(blk)
  blk.add_equal('%6', prover.ops.get_element_ptr('struct.LaneBoundaryType**',('struct.LaneInfo*', '%3'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(5,)),('i32', prover.ops.constant_int(1,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:265:92')
  blk.add_equal('%7', prover.ops.load('struct.LaneBoundaryType*',('struct.LaneBoundaryType**', '%6'),), 'example/path.c:265:92')
  blk.add_equal('%8', prover.ops.get_element_ptr('struct.LaneBoundaryType**',('struct.LaneInfo*', '%3'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(5,)),('i32', prover.ops.constant_int(1,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:266:62')
  blk.add_equal('%9', prover.ops.load('struct.LaneBoundaryType*',('struct.LaneBoundaryType**', '%8'),), 'example/path.c:266:62')
  blk.add_equal('%10', prover.ops.eq('i1',('struct.LaneBoundaryType*', '%7'),('struct.LaneBoundaryType*', '%9'),), 'example/path.c:266:13')
  func.add_cond_edge('bb_5', '%10', 'bb_33', 'bb_11', 'example/path.c:265:3')

  blk = prover.Block("bb_11")
  func.add_block(blk)
  blk.add_equal('%12', prover.ops.get_element_ptr('double*',('struct.LaneWaypoint*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), '')
  blk.add_equal('%13', prover.ops.load('double',('double*', '%12'),), '')
  func.add_edge('bb_11', 'bb_14', 'example/path.c:265:3')

  blk = prover.Block("bb_14")
  func.add_block(blk)
  blk.add_equal('%15', prover.ops.phi('struct.LaneBoundaryType*',{'bb_11' : '%7','bb_29' : '%30',},), '')
  blk.add_equal('%16', prover.ops.get_element_ptr('double*',('struct.LaneBoundaryType*', '%15'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:267:15')
  blk.add_equal('%17', prover.ops.load('double',('double*', '%16'),), 'example/path.c:267:15')
  blk.add_equal('%18', prover.ops.gt('i1',('double', '%17'),('double', '%13'),), 'example/path.c:267:17')
  func.add_cond_edge('bb_14', '%18', 'bb_29', 'bb_19', 'example/path.c:267:9')

  blk = prover.Block("bb_19")
  func.add_block(blk)
  blk.add_equal('%20', prover.ops.get_element_ptr('i32*',('struct.LaneBoundaryType*', '%15'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(2,)),), 'example/path.c:268:17')
  blk.add_equal('%21', prover.ops.load('i32',('i32*', '%20'),), 'example/path.c:268:17')
  blk.add_equal('%22', prover.ops.sgt('i1',('i32', '%21'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:268:28')
  func.add_cond_edge('bb_19', '%22', 'bb_23', 'bb_33', 'example/path.c:268:32')

  blk = prover.Block("bb_23")
  func.add_block(blk)
  blk.add_equal('%24', prover.ops.get_element_ptr('i32**',('struct.LaneBoundaryType*', '%15'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:268:41')
  blk.add_equal('%25', prover.ops.load('i32*',('i32**', '%24'),), 'example/path.c:268:41')
  blk.add_equal('%26', prover.ops.eq('i1',('i32*', '%25'),('i32*', prover.ops.constant_pointer_null('i32*',)),), 'example/path.c:268:35')
  func.add_cond_edge('bb_23', '%26', 'bb_33', 'bb_27', 'example/path.c:268:11')

  blk = prover.Block("bb_27")
  func.add_block(blk)
  blk.add_equal('%28', prover.ops.load('i32',('i32*', '%25'),), 'example/path.c:269:16')
  func.add_edge('bb_27', 'bb_33', 'example/path.c:269:9')

  blk = prover.Block("bb_29")
  func.add_block(blk)
  blk.add_equal('%30', prover.ops.get_element_ptr('struct.LaneBoundaryType*',('struct.LaneBoundaryType*', '%15'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:266:67')
  blk.add_equal('%31', prover.ops.load('struct.LaneBoundaryType*',('struct.LaneBoundaryType**', '%8'),), 'example/path.c:266:62')
  blk.add_equal('%32', prover.ops.eq('i1',('struct.LaneBoundaryType*', '%30'),('struct.LaneBoundaryType*', '%31'),), 'example/path.c:266:13')
  func.add_cond_edge('bb_29', '%32', 'bb_33', 'bb_14', 'example/path.c:265:3')

  blk = prover.Block("bb_33")
  func.add_block(blk)
  blk.add_equal('%34', prover.ops.phi('i32',{'bb_19' : prover.ops.constant_int(0,),'bb_23' : prover.ops.constant_int(0,),'bb_27' : '%28','bb_1' : prover.ops.constant_int(0,),'bb_5' : prover.ops.constant_int(0,),'bb_29' : prover.ops.constant_int(0,),},), '')
  blk.set_return('%34', '')


  func = prover.Function("RightNeighborWaypoint")
  module.add_function(func)
  func.add_arg(('struct.LaneWaypoint*', '%0'))
  func.set_entry("bb_1")

  blk = prover.Block("bb_1")
  func.add_block(blk)
  blk.add_equal('%2', prover.ops.alloca('double*',('i32', prover.ops.constant_int(1,)),), '')
  blk.add_equal('%3', prover.ops.alloca('double*',('i32', prover.ops.constant_int(1,)),), '')
  blk.add_equal('%4', prover.ops.alloca('struct.Vec2d*',('i32', prover.ops.constant_int(1,)),), '')
  blk.add_equal('%5', prover.ops.call('struct.LaneWaypoint*',('struct.LaneWaypoint* ()*', prover.ops.global_value('struct.LaneWaypoint* ()*','@LaneWaypoint1',)),), 'example/path.c:279:35')
  blk.add_equal('%6', prover.ops.get_element_ptr('struct.LaneInfo**',('struct.LaneWaypoint*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:280:18')
  blk.add_equal('%7', prover.ops.load('struct.LaneInfo*',('struct.LaneInfo**', '%6'),), 'example/path.c:280:18')
  blk.add_equal('%8', prover.ops.eq('i1',('struct.LaneInfo*', '%7'),('struct.LaneInfo*', prover.ops.constant_pointer_null('struct.LaneInfo*',)),), 'example/path.c:280:8')
  func.add_cond_edge('bb_1', '%8', 'bb_55', 'bb_9', 'example/path.c:280:7')

  blk = prover.Block("bb_9")
  func.add_block(blk)
  blk.add_equal('%10', prover.ops.get_element_ptr('double*',('struct.LaneWaypoint*', '%0'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:283:66')
  blk.add_equal('%11', prover.ops.load('double',('double*', '%10'),), 'example/path.c:283:66')
  blk.add_equal('%12', prover.ops.call('{ double, double }',('struct.LaneInfo*', '%7'),('double', '%11'),('{ double, double } (%struct.LaneInfo*, double)*', prover.ops.global_value('{ double, double } (%struct.LaneInfo*, double)*','@GetSmoothPoint',)),), 'example/path.c:283:24')
  blk.add_equal('%13', prover.ops.extract_value(('{ double, double }', '%12'),0,), 'example/path.c:283:24')
  blk.add_equal('%14', prover.ops.extract_value(('{ double, double }', '%12'),1,), 'example/path.c:283:24')
  blk.add_equal('%15', prover.ops.get_element_ptr('i32**',('struct.LaneInfo*', '%7'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(6,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:284:77')
  blk.add_equal('%16', prover.ops.load('i32*',('i32**', '%15'),), 'example/path.c:284:77')
  blk.add_equal('%17', prover.ops.load('struct.LaneInfo*',('struct.LaneInfo**', '%6'),), 'example/path.c:285:29')
  blk.add_equal('%18', prover.ops.get_element_ptr('i32**',('struct.LaneInfo*', '%17'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(6,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:285:67')
  blk.add_equal('%19', prover.ops.load('i32*',('i32**', '%18'),), 'example/path.c:285:67')
  blk.add_equal('%20', prover.ops.eq('i1',('i32*', '%16'),('i32*', '%19'),), 'example/path.c:285:16')
  func.add_cond_edge('bb_9', '%20', 'bb_55', 'bb_21', 'example/path.c:284:3')

  blk = prover.Block("bb_21")
  func.add_block(blk)
  blk.add_equal('%22', prover.ops.bitcast('i8*',('double*', '%2'),), '')
  blk.add_equal('%23', prover.ops.bitcast('i8*',('double*', '%3'),), '')
  blk.add_equal('%24', prover.ops.bitcast('i8*',('struct.Vec2d*', '%4'),), '')
  blk.add_equal('%25', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%4'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), '')
  blk.add_equal('%26', prover.ops.get_element_ptr('double*',('struct.Vec2d*', '%4'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(1,)),), '')
  func.add_edge('bb_21', 'bb_32', 'example/path.c:284:3')

  blk = prover.Block("bb_27")
  func.add_block(blk)
  blk.add_equal('%28', prover.ops.load('struct.LaneInfo*',('struct.LaneInfo**', '%6'),), 'example/path.c:285:29')
  blk.add_equal('%29', prover.ops.get_element_ptr('i32**',('struct.LaneInfo*', '%28'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(6,)),('i32', prover.ops.constant_int(1,)),), 'example/path.c:285:67')
  blk.add_equal('%30', prover.ops.load('i32*',('i32**', '%29'),), 'example/path.c:285:67')
  blk.add_equal('%31', prover.ops.eq('i1',('i32*', '%54'),('i32*', '%30'),), 'example/path.c:285:16')
  func.add_cond_edge('bb_27', '%31', 'bb_55', 'bb_32', 'example/path.c:284:3')

  blk = prover.Block("bb_32")
  func.add_block(blk)
  blk.add_equal('%33', prover.ops.phi('struct.LaneWaypoint*',{'bb_21' : prover.ops.undef('struct.LaneWaypoint*',),'bb_27' : '%53',},), '')
  blk.add_equal('%34', prover.ops.phi('i32*',{'bb_21' : '%16','bb_27' : '%54',},), '')
  blk.add_equal('%35', prover.ops.load('i32',('i32*', '%34'),), 'example/path.c:286:41')
  blk.add_equal('%36', prover.ops.call('struct.LaneInfo*',('i32', '%35'),('struct.LaneInfo* (i32)*', prover.ops.global_value('struct.LaneInfo* (i32)*','@GetLaneById',)),), 'example/path.c:286:29')
  blk.add_equal('%37', prover.ops.eq('i1',('struct.LaneInfo*', '%36'),('struct.LaneInfo*', prover.ops.constant_pointer_null('struct.LaneInfo*',)),), 'example/path.c:287:10')
  func.add_cond_edge('bb_32', '%37', 'bb_55', 'bb_38', 'example/path.c:287:9')

  blk = prover.Block("bb_38")
  func.add_block(blk)
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(8,)),('i8*', '%22'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_start_p0i8',)),), 'example/path.c:290:5')
  blk.add_event(prover.ops.store('void',('double', prover.ops.constant_double('double 0.000000e+00',)),('double*', '%2'),), 'example/path.c:290:12')
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(8,)),('i8*', '%23'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_start_p0i8',)),), 'example/path.c:291:5')
  blk.add_event(prover.ops.store('void',('double', prover.ops.constant_double('double 0.000000e+00',)),('double*', '%3'),), 'example/path.c:291:12')
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(16,)),('i8*', '%24'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_start_p0i8',)),), 'example/path.c:292:5')
  blk.add_event(prover.ops.store('void',('double', '%13'),('double*', '%25'),), 'example/path.c:292:27')
  blk.add_event(prover.ops.store('void',('double', '%14'),('double*', '%26'),), 'example/path.c:292:27')
  blk.add_equal('%39', prover.ops.call('i32',('struct.LaneInfo*', '%36'),('struct.Vec2d*', '%4'),('double*', '%2'),('double*', '%3'),('i32 (%struct.LaneInfo*, %struct.Vec2d*, double*, double*)*', prover.ops.global_value('i32 (%struct.LaneInfo*, %struct.Vec2d*, double*, double*)*','@GetProjection',)),), 'example/path.c:293:10')
  blk.add_equal('%40', prover.ops.eq('i1',('i32', '%39'),('i32', prover.ops.constant_int(0,)),), 'example/path.c:293:10')
  func.add_cond_edge('bb_38', '%40', 'bb_51', 'bb_41', 'example/path.c:293:9')

  blk = prover.Block("bb_41")
  func.add_block(blk)
  blk.add_equal('%42', prover.ops.load('double',('double*', '%2'),), 'example/path.c:296:9')
  blk.add_equal('%43', prover.ops.lt('i1',('double', '%42'),('double', prover.ops.constant_double('double -1.000000e+00',)),), 'example/path.c:296:11')
  func.add_cond_edge('bb_41', '%43', 'bb_51', 'bb_44', 'example/path.c:296:30')

  blk = prover.Block("bb_44")
  func.add_block(blk)
  blk.add_equal('%45', prover.ops.get_element_ptr('double*',('struct.LaneInfo*', '%36'),('i64', prover.ops.constant_int(0,)),('i32', prover.ops.constant_int(0,)),), 'example/path.c:296:43')
  blk.add_equal('%46', prover.ops.load('double',('double*', '%45'),), 'example/path.c:296:43')
  blk.add_equal('%47', prover.ops.fadd('double',('double', '%46'),('double', prover.ops.constant_double('double 1.000000e+00',)),), 'example/path.c:296:57')
  blk.add_equal('%48', prover.ops.gt('i1',('double', '%42'),('double', '%47'),), 'example/path.c:296:35')
  func.add_cond_edge('bb_44', '%48', 'bb_51', 'bb_49', 'example/path.c:296:9')

  blk = prover.Block("bb_49")
  func.add_block(blk)
  blk.add_equal('%50', prover.ops.call('struct.LaneWaypoint*',('struct.LaneInfo*', '%36'),('double', '%42'),('struct.LaneWaypoint* (%struct.LaneInfo*, double)*', prover.ops.global_value('struct.LaneWaypoint* (%struct.LaneInfo*, double)*','@LaneWaypoint2',)),), 'example/path.c:299:14')
  func.add_edge('bb_49', 'bb_51', 'example/path.c:299:7')

  blk = prover.Block("bb_51")
  func.add_block(blk)
  blk.add_equal('%52', prover.ops.phi('i1',{'bb_49' : prover.ops.constant_int(0,),'bb_38' : prover.ops.constant_int(1,),'bb_44' : prover.ops.constant_int(1,),'bb_41' : prover.ops.constant_int(1,),},), '')
  blk.add_equal('%53', prover.ops.phi('struct.LaneWaypoint*',{'bb_49' : '%50','bb_38' : '%33','bb_44' : '%33','bb_41' : '%33',},), '')
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(16,)),('i8*', '%24'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_end_p0i8',)),), 'example/path.c:301:3')
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(8,)),('i8*', '%23'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_end_p0i8',)),), 'example/path.c:301:3')
  blk.add_event(prover.ops.call('void',('i64', prover.ops.constant_int(8,)),('i8*', '%22'),('void (i64, i8*)*', prover.ops.global_value('void (i64, i8*)*','@llvm_lifetime_end_p0i8',)),), 'example/path.c:301:3')
  blk.add_equal('%54', prover.ops.get_element_ptr('i32*',('i32*', '%34'),('i64', prover.ops.constant_int(1,)),), 'example/path.c:285:72')
  func.add_cond_edge('bb_51', '%52', 'bb_27', 'bb_55', '')

  blk = prover.Block("bb_55")
  func.add_block(blk)
  blk.add_equal('%56', prover.ops.phi('struct.LaneWaypoint*',{'bb_1' : '%5','bb_9' : '%5','bb_27' : '%5','bb_51' : '%53','bb_32' : '%5',},), '')
  blk.set_return('%56', 'example/path.c:303:1')


